/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1);
var AlloyFinger = __webpack_require__(2);
var Alert = __webpack_require__(3);

// var URL = 'http://localhost/tour/',
var URL = 'http://www.suiyiyou.net/',
    json = {
        group : 'p_route',
        tick : 'p_ticket'
    }

//读URL参数
function urlKey(name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    var r = window.location.search.substr(1).match(reg);
    if (r != null) return encodeURI(r[2]); return null;
}

function getCookie(name) {
    var arr = document.cookie.split('; ');
    var i = 0;
    for (i = 0; i < arr.length; i++) {
        var arr2 = arr[i].split('=');

        if (arr2[0] == name) {
            var getC = decodeURIComponent(arr2[1]);
            return getC;
        }
    }
    return '';
}

//轮播图
function carousel(data) {
    var len = data.length,
        html = '';
    for (var i = 0; i < len; i++) {
        if(i == 0){
            html += '<a href="' + window.controller + '/p_ticket?shopCode=' + data[i].code + '&shopType=' + data[i].shop_type + '" class="item-bg on"><img src=' + data[i].imgFile + '></a>';
            continue;
        }
        html += '<a href="' + window.controller + '/p_ticket?shopCode=' + data[i].code + '&shopType=' + data[i].shop_type + '" class="item-bg"><img src=' + data[i].imgFile + '></a>'
    }
    $('#carouselBg').append(html);

    //轮播
    var picArr = $('#carouselBg'),
        itemBg = $('.item-bg'),
        pointers = $('.pointer'),
        nowNum = 0;

    function left() {
        itemBg.eq(nowNum).animate({ left: '-100%' }, 300).next().animate({ left: '0%' }, 300);
        pointers.eq(nowNum).removeClass('on').next().addClass('on');
        nowNum += 1;
    }

    var timer = setInterval(function () {

        if (nowNum == 2) {

            itemBg.eq(0).animate({ left: '0' }, 300);
            itemBg.eq(2).animate({ left: '100%' }, 300);
            itemBg.eq(1).css('left', '100%');
            pointers.eq(nowNum).removeClass('on');
            pointers.eq(0).addClass('on');
            nowNum = 0;

        } else {
            left();
        }

    }, 3000);

    new AlloyFinger(picArr[0], {

        swipe: function (evt) {

            var dir = evt.direction;

            if (dir == "Left" && nowNum < 2) {

                left();

            } else if (dir == "Right" && nowNum > 0) {

                itemBg.eq(nowNum).animate({ left: '100%' }, 300).prev().animate({ left: '0%' }, 300);
                pointers.eq(nowNum).removeClass('on').prev().addClass('on');
                nowNum -= 1;

            }
        },
    })
}

//首页6商品展示数据
function homePro(data) {
    var len = data.length,
        html = '';
    for (var i = 0; i < len; i++) {

        html += '<a href=' + window.controller + '/'+json[data[i].shop_type]+'?shopCode=' + data[i].code + '&shopType=' + data[i].shop_type + '><div class="item">';

        html += '<img class="pro-pic" src=' + data[i].imgFile + '>';
        html += '<p class="pro-name">' + data[i].name + '</p>';
        html += '</div></a>';
    }

    $('#productBox').append(html);
}

//首页轮播
$.ajax({
    url: URL + '/index.php/Weixin/List/DynamicFigure',
    success: function (res) {
        var code = res.code,
            data = res.data;

        if (code == 200) {
            carousel(data);
        }
    }
})

//首页商品
$.ajax({
    url: URL + '/index.php/weixin/List/RecommendList',
    success: function (res) {
        var code = res.code,
            data = res.data;

        if (code == 200) {
            homePro(data);
        }
    }
})

function GetQueryString(name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    var r = window.location.search.substr(1).match(reg);
    if (r != null) return unescape(r[2]); return null;
}

$('#searchInp').click(function(){
    window.location.href = window.controller + "/s_route";
})

CONFIG.jsApiList = [    //需要调用的接口
    'onMenuShareTimeline',
    'onMenuShareAppMessage'
]
wx.config(CONFIG);
var link = location.origin + location.pathname + '?pid=' + getCookie('pid');
wx.ready(function () {
    //分享朋友圈
    wx.onMenuShareTimeline({
        title: document.title,
        link: link,
        imgUrl: public + '/Weixin/image/wxbg.png'
    });
    //分享朋友
    wx.onMenuShareAppMessage({
        title: document.title,
        desc: '我的旅游小店，随我心，游天下',
        link: link,
        imgUrl: public + '/Weixin/image/wxbg.png',
    });
})


/***/ }),
/* 1 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

(function () {
    function getLen(v) {
        return Math.sqrt(v.x * v.x + v.y * v.y);
    }

    function dot(v1, v2) {
        return v1.x * v2.x + v1.y * v2.y;
    }

    function getAngle(v1, v2) {
        var mr = getLen(v1) * getLen(v2);
        if (mr === 0) return 0;
        var r = dot(v1, v2) / mr;
        if (r > 1) r = 1;
        return Math.acos(r);
    }

    function cross(v1, v2) {
        return v1.x * v2.y - v2.x * v1.y;
    }

    function getRotateAngle(v1, v2) {
        var angle = getAngle(v1, v2);
        if (cross(v1, v2) > 0) {
            angle *= -1;
        }

        return angle * 180 / Math.PI;
    }

    var HandlerAdmin = function(el) {
        this.handlers = [];
        this.el = el;
    };

    HandlerAdmin.prototype.add = function(handler) {
        this.handlers.push(handler);
    }

    HandlerAdmin.prototype.del = function(handler) {
        if(!handler) this.handlers = [];

        for(var i=this.handlers.length; i>=0; i--) {
            if(this.handlers[i] === handler) {
                this.handlers.splice(i, 1);
            }
        }
    }

    HandlerAdmin.prototype.dispatch = function() {
        for(var i=0,len=this.handlers.length; i<len; i++) {
            var handler = this.handlers[i];
            if(typeof handler === 'function') handler.apply(this.el, arguments);
        }
    }

    function wrapFunc(el, handler) {
        var handlerAdmin = new HandlerAdmin(el);
        handlerAdmin.add(handler);

        return handlerAdmin;
    }

    var AlloyFinger = function (el, option) {

        this.element = typeof el == 'string' ? document.querySelector(el) : el;

        this.start = this.start.bind(this);
        this.move = this.move.bind(this);
        this.end = this.end.bind(this);
        this.cancel = this.cancel.bind(this);
        this.element.addEventListener("touchstart", this.start, false);
        this.element.addEventListener("touchmove", this.move, false);
        this.element.addEventListener("touchend", this.end, false);
        this.element.addEventListener("touchcancel", this.cancel, false);

        this.preV = { x: null, y: null };
        this.pinchStartLen = null;
        this.zoom = 1;
        this.isDoubleTap = false;

        var noop = function () { };

        this.rotate = wrapFunc(this.element, option.rotate || noop);
        this.touchStart = wrapFunc(this.element, option.touchStart || noop);
        this.multipointStart = wrapFunc(this.element, option.multipointStart || noop);
        this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);
        this.pinch = wrapFunc(this.element, option.pinch || noop);
        this.swipe = wrapFunc(this.element, option.swipe || noop);
        this.tap = wrapFunc(this.element, option.tap || noop);
        this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);
        this.longTap = wrapFunc(this.element, option.longTap || noop);
        this.singleTap = wrapFunc(this.element, option.singleTap || noop);
        this.pressMove = wrapFunc(this.element, option.pressMove || noop);
        this.twoFingerPressMove = wrapFunc(this.element, option.twoFingerPressMove || noop);
        this.touchMove = wrapFunc(this.element, option.touchMove || noop);
        this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);
        this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);

        this._cancelAllHandler = this.cancelAll.bind(this);
        window.removeEventListener('scroll', this._cancelAllHandler);

        window.addEventListener('scroll', this._cancelAllHandler);

        this.delta = null;
        this.last = null;
        this.now = null;
        this.tapTimeout = null;
        this.singleTapTimeout = null;
        this.longTapTimeout = null;
        this.swipeTimeout = null;
        this.x1 = this.x2 = this.y1 = this.y2 = null;
        this.preTapPosition = { x: null, y: null };
    };

    AlloyFinger.prototype = {
        start: function (evt) {
            if (!evt.touches) return;
            this.now = Date.now();
            this.x1 = evt.touches[0].pageX;
            this.y1 = evt.touches[0].pageY;
            this.delta = this.now - (this.last || this.now);
            this.touchStart.dispatch(evt);
            if (this.preTapPosition.x !== null) {
                this.isDoubleTap = (this.delta > 0 && this.delta <= 250 && Math.abs(this.preTapPosition.x - this.x1) < 30 && Math.abs(this.preTapPosition.y - this.y1) < 30);
            }
            this.preTapPosition.x = this.x1;
            this.preTapPosition.y = this.y1;
            this.last = this.now;
            var preV = this.preV,
                len = evt.touches.length;
            if (len > 1) {
                this._cancelLongTap();
                this._cancelSingleTap();
                var v = { x: evt.touches[1].pageX - this.x1, y: evt.touches[1].pageY - this.y1 };
                preV.x = v.x;
                preV.y = v.y;
                this.pinchStartLen = getLen(preV);
                this.multipointStart.dispatch(evt);
            }
            this._preventTap = false;
            this.longTapTimeout = setTimeout(function () {
                this.longTap.dispatch(evt);
                this._preventTap = true;
            }.bind(this), 750);
        },
        move: function (evt) {
            if (!evt.touches) return;
            var preV = this.preV,
                len = evt.touches.length,
                currentX = evt.touches[0].pageX,
                currentY = evt.touches[0].pageY;
            this.isDoubleTap = false;
            if (len > 1) {
                var sCurrentX = evt.touches[1].pageX,
                    sCurrentY = evt.touches[1].pageY
                var v = { x: evt.touches[1].pageX - currentX, y: evt.touches[1].pageY - currentY };

                if (preV.x !== null) {
                    if (this.pinchStartLen > 0) {
                        evt.zoom = getLen(v) / this.pinchStartLen;
                        this.pinch.dispatch(evt);
                    }

                    evt.angle = getRotateAngle(v, preV);
                    this.rotate.dispatch(evt);
                }
                preV.x = v.x;
                preV.y = v.y;

                if (this.x2 !== null && this.sx2 !== null) {
                    evt.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;
                    evt.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;
                } else {
                    evt.deltaX = 0;
                    evt.deltaY = 0;
                }
                this.twoFingerPressMove.dispatch(evt);

                this.sx2 = sCurrentX;
                this.sy2 = sCurrentY;
            } else {
                if (this.x2 !== null) {
                    evt.deltaX = currentX - this.x2;
                    evt.deltaY = currentY - this.y2;

                } else {
                    evt.deltaX = 0;
                    evt.deltaY = 0;
                }
                
                
                this.pressMove.dispatch(evt);
            }

            this.touchMove.dispatch(evt);

            this._cancelLongTap();
            this.x2 = currentX;
            this.y2 = currentY;
            
            if (len > 1) {
                evt.preventDefault();
            }
        },
        end: function (evt) {
            if (!evt.changedTouches) return;
            this._cancelLongTap();
            var self = this;
            if (evt.touches.length < 2) {
                this.multipointEnd.dispatch(evt);
            }

            //swipe
            if ((this.x2 && Math.abs(this.x1 - this.x2) > 30) ||
                (this.y2 && Math.abs(this.y1 - this.y2) > 30)) {
                evt.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);
                this.swipeTimeout = setTimeout(function () {
                    self.swipe.dispatch(evt);

                }, 0)
            } else {
                this.tapTimeout = setTimeout(function () {
                    if(!self._preventTap){
                        self.tap.dispatch(evt);
                    }
                    // trigger double tap immediately
                    if (self.isDoubleTap) {
                        self.doubleTap.dispatch(evt);
                        clearTimeout(self.singleTapTimeout);
                        self.isDoubleTap = false;
                    }
                }, 0)

                if (!self.isDoubleTap) {
                    self.singleTapTimeout = setTimeout(function () {
                        self.singleTap.dispatch(evt);
                    }, 250);
                }
            }

            this.touchEnd.dispatch(evt);

            this.preV.x = 0;
            this.preV.y = 0;
            this.zoom = 1;
            this.pinchStartLen = null;
            this.x1 = this.x2 = this.y1 = this.y2 = null;
        },
        cancelAll: function () {
            this._preventTap = true
            clearTimeout(this.singleTapTimeout);
            clearTimeout(this.tapTimeout);
            clearTimeout(this.longTapTimeout);
            clearTimeout(this.swipeTimeout);
        },
        cancel: function (evt) {
            this.cancelAll()
            this.touchCancel.dispatch(evt);
        },
        _cancelLongTap: function () {
            clearTimeout(this.longTapTimeout);
        },
        _cancelSingleTap: function () {
            clearTimeout(this.singleTapTimeout);
        },
        _swipeDirection: function (x1, x2, y1, y2) {
            return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')
        },

        on: function(evt, handler) {
            if(this[evt]) {
                this[evt].add(handler);
            }
        },

        off: function(evt, handler) {
            if(this[evt]) {
                this[evt].del(handler);
            }
        },

        destroy: function() {
            if(this.singleTapTimeout) clearTimeout(this.singleTapTimeout);
            if(this.tapTimeout) clearTimeout(this.tapTimeout);
            if(this.longTapTimeout) clearTimeout(this.longTapTimeout);
            if(this.swipeTimeout) clearTimeout(this.swipeTimeout);

            this.element.removeEventListener("touchstart", this.start);
            this.element.removeEventListener("touchmove", this.move);
            this.element.removeEventListener("touchend", this.end);
            this.element.removeEventListener("touchcancel", this.cancel);

            this.rotate.del();
            this.touchStart.del();
            this.multipointStart.del();
            this.multipointEnd.del();
            this.pinch.del();
            this.swipe.del();
            this.tap.del();
            this.doubleTap.del();
            this.longTap.del();
            this.singleTap.del();
            this.pressMove.del();
            this.twoFingerPressMove.del()
            this.touchMove.del();
            this.touchEnd.del();
            this.touchCancel.del();

            this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;

            return null;
        }
    };

    

    if (true) {
        module.exports = AlloyFinger;
    } else {
        window.AlloyFinger = AlloyFinger;
    }
})();


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var Alert = function(content) {
    var $box = $('<div></div>'),
        $i = $('<i class="iconfont icon-jinggao"></i>'),
        $span = $('<span></span>');

    $box.css({
        position: 'fixed',
        textAlign: 'center',
        width: '180px',
        bottom: '30px',
        left: 'calc(50% - 90px)',
        fontSize: '12px',
        borderRadius: '3px',
        color: '#fff',
        opacity: '0.1',
        background: 'rgba(0,0,0,0.7)'
    });

    $span.css({
        lineHeight: '25px',
    })

    $span.append(content);
    $box.append($span);
    $('body').append($box);
    $box.animate({
        opacity: '1',
        bottom: '50px'
    }, 200, function () {
        setTimeout(function () {
            $box.animate({
                opacity: '0.1',
                bottom: '30px'
            }, function () {
                $box.remove();
            })
        }, 1500)
    })
}

if (true) {
    module.exports = Alert;
} else {
    window.datePrice = Alert;
}



/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgMmU2NzE4NjllZmQyMGYzMGQ3YWYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hvbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hvbWUvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly8vLi4vY29tbW9uL2FsbG95X2Zpbmdlci5qcyIsIndlYnBhY2s6Ly8vLi4vY29tbW9uL0FsZXJ0LW1iLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUNBQTJCLDBCQUEwQixFQUFFO0FBQ3ZELHlDQUFpQyxlQUFlO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhEQUFzRCwrREFBK0Q7O0FBRXJIO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7OztBQzdEQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDOztBQUVBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsU0FBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUNBQW1DLGdCQUFnQix1QkFBdUIsYUFBYTtBQUN2RjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsa0NBQWtDLFlBQVk7QUFDOUMsa0NBQWtDLGVBQWU7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUztBQUNUO0FBQ0E7O0FBRUEsS0FBSzs7QUFFTDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxhQUFhOztBQUViLDJDQUEyQyxlQUFlLHVCQUF1QixhQUFhO0FBQzlGO0FBQ0E7O0FBRUE7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFNBQVM7O0FBRTVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6Qzs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7Ozs7Ozs7QUN2S0QseUM7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVDQUF1QyxNQUFNO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2Q0FBNkMsT0FBTztBQUNwRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7O0FBRUEsZ0NBQWdDOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7O0FBRXpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQzs7Ozs7OztBQ2xVRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJmaWxlIjoiaG9tZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCAyZTY3MTg2OWVmZDIwZjMwZDdhZiIsInJlcXVpcmUoJy4vaW5kZXguc2NzcycpO1xyXG52YXIgQWxsb3lGaW5nZXIgPSByZXF1aXJlKCdDT01NT04vYWxsb3lfZmluZ2VyLmpzJyk7XHJcbnZhciBBbGVydCA9IHJlcXVpcmUoJ0NPTU1PTi9BbGVydC1tYi5qcycpO1xyXG5cclxuLy8gdmFyIFVSTCA9ICdodHRwOi8vbG9jYWxob3N0L3RvdXIvJyxcclxudmFyIFVSTCA9ICdodHRwOi8vd3d3LnN1aXlpeW91Lm5ldC8nLFxyXG4gICAganNvbiA9IHtcclxuICAgICAgICBncm91cCA6ICdwX3JvdXRlJyxcclxuICAgICAgICB0aWNrIDogJ3BfdGlja2V0J1xyXG4gICAgfVxyXG5cclxuLy/or7tVUkzlj4LmlbBcclxuZnVuY3Rpb24gdXJsS2V5KG5hbWUpIHtcclxuICAgIHZhciByZWcgPSBuZXcgUmVnRXhwKFwiKF58JilcIiArIG5hbWUgKyBcIj0oW14mXSopKCZ8JClcIik7XHJcbiAgICB2YXIgciA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyKDEpLm1hdGNoKHJlZyk7XHJcbiAgICBpZiAociAhPSBudWxsKSByZXR1cm4gZW5jb2RlVVJJKHJbMl0pOyByZXR1cm4gbnVsbDtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0Q29va2llKG5hbWUpIHtcclxuICAgIHZhciBhcnIgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJyk7XHJcbiAgICB2YXIgaSA9IDA7XHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIGFycjIgPSBhcnJbaV0uc3BsaXQoJz0nKTtcclxuXHJcbiAgICAgICAgaWYgKGFycjJbMF0gPT0gbmFtZSkge1xyXG4gICAgICAgICAgICB2YXIgZ2V0QyA9IGRlY29kZVVSSUNvbXBvbmVudChhcnIyWzFdKTtcclxuICAgICAgICAgICAgcmV0dXJuIGdldEM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuICcnO1xyXG59XHJcblxyXG4vL+i9ruaSreWbvlxyXG5mdW5jdGlvbiBjYXJvdXNlbChkYXRhKSB7XHJcbiAgICB2YXIgbGVuID0gZGF0YS5sZW5ndGgsXHJcbiAgICAgICAgaHRtbCA9ICcnO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgIGlmKGkgPT0gMCl7XHJcbiAgICAgICAgICAgIGh0bWwgKz0gJzxhIGhyZWY9XCInICsgd2luZG93LmNvbnRyb2xsZXIgKyAnL3BfdGlja2V0P3Nob3BDb2RlPScgKyBkYXRhW2ldLmNvZGUgKyAnJnNob3BUeXBlPScgKyBkYXRhW2ldLnNob3BfdHlwZSArICdcIiBjbGFzcz1cIml0ZW0tYmcgb25cIj48aW1nIHNyYz0nICsgZGF0YVtpXS5pbWdGaWxlICsgJz48L2E+JztcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGh0bWwgKz0gJzxhIGhyZWY9XCInICsgd2luZG93LmNvbnRyb2xsZXIgKyAnL3BfdGlja2V0P3Nob3BDb2RlPScgKyBkYXRhW2ldLmNvZGUgKyAnJnNob3BUeXBlPScgKyBkYXRhW2ldLnNob3BfdHlwZSArICdcIiBjbGFzcz1cIml0ZW0tYmdcIj48aW1nIHNyYz0nICsgZGF0YVtpXS5pbWdGaWxlICsgJz48L2E+J1xyXG4gICAgfVxyXG4gICAgJCgnI2Nhcm91c2VsQmcnKS5hcHBlbmQoaHRtbCk7XHJcblxyXG4gICAgLy/ova7mkq1cclxuICAgIHZhciBwaWNBcnIgPSAkKCcjY2Fyb3VzZWxCZycpLFxyXG4gICAgICAgIGl0ZW1CZyA9ICQoJy5pdGVtLWJnJyksXHJcbiAgICAgICAgcG9pbnRlcnMgPSAkKCcucG9pbnRlcicpLFxyXG4gICAgICAgIG5vd051bSA9IDA7XHJcblxyXG4gICAgZnVuY3Rpb24gbGVmdCgpIHtcclxuICAgICAgICBpdGVtQmcuZXEobm93TnVtKS5hbmltYXRlKHsgbGVmdDogJy0xMDAlJyB9LCAzMDApLm5leHQoKS5hbmltYXRlKHsgbGVmdDogJzAlJyB9LCAzMDApO1xyXG4gICAgICAgIHBvaW50ZXJzLmVxKG5vd051bSkucmVtb3ZlQ2xhc3MoJ29uJykubmV4dCgpLmFkZENsYXNzKCdvbicpO1xyXG4gICAgICAgIG5vd051bSArPSAxO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgaWYgKG5vd051bSA9PSAyKSB7XHJcblxyXG4gICAgICAgICAgICBpdGVtQmcuZXEoMCkuYW5pbWF0ZSh7IGxlZnQ6ICcwJyB9LCAzMDApO1xyXG4gICAgICAgICAgICBpdGVtQmcuZXEoMikuYW5pbWF0ZSh7IGxlZnQ6ICcxMDAlJyB9LCAzMDApO1xyXG4gICAgICAgICAgICBpdGVtQmcuZXEoMSkuY3NzKCdsZWZ0JywgJzEwMCUnKTtcclxuICAgICAgICAgICAgcG9pbnRlcnMuZXEobm93TnVtKS5yZW1vdmVDbGFzcygnb24nKTtcclxuICAgICAgICAgICAgcG9pbnRlcnMuZXEoMCkuYWRkQ2xhc3MoJ29uJyk7XHJcbiAgICAgICAgICAgIG5vd051bSA9IDA7XHJcblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxlZnQoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfSwgMzAwMCk7XHJcblxyXG4gICAgbmV3IEFsbG95RmluZ2VyKHBpY0FyclswXSwge1xyXG5cclxuICAgICAgICBzd2lwZTogZnVuY3Rpb24gKGV2dCkge1xyXG5cclxuICAgICAgICAgICAgdmFyIGRpciA9IGV2dC5kaXJlY3Rpb247XHJcblxyXG4gICAgICAgICAgICBpZiAoZGlyID09IFwiTGVmdFwiICYmIG5vd051bSA8IDIpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBsZWZ0KCk7XHJcblxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRpciA9PSBcIlJpZ2h0XCIgJiYgbm93TnVtID4gMCkge1xyXG5cclxuICAgICAgICAgICAgICAgIGl0ZW1CZy5lcShub3dOdW0pLmFuaW1hdGUoeyBsZWZ0OiAnMTAwJScgfSwgMzAwKS5wcmV2KCkuYW5pbWF0ZSh7IGxlZnQ6ICcwJScgfSwgMzAwKTtcclxuICAgICAgICAgICAgICAgIHBvaW50ZXJzLmVxKG5vd051bSkucmVtb3ZlQ2xhc3MoJ29uJykucHJldigpLmFkZENsYXNzKCdvbicpO1xyXG4gICAgICAgICAgICAgICAgbm93TnVtIC09IDE7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgIH0pXHJcbn1cclxuXHJcbi8v6aaW6aG1NuWVhuWTgeWxleekuuaVsOaNrlxyXG5mdW5jdGlvbiBob21lUHJvKGRhdGEpIHtcclxuICAgIHZhciBsZW4gPSBkYXRhLmxlbmd0aCxcclxuICAgICAgICBodG1sID0gJyc7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XHJcblxyXG4gICAgICAgIGh0bWwgKz0gJzxhIGhyZWY9JyArIHdpbmRvdy5jb250cm9sbGVyICsgJy8nK2pzb25bZGF0YVtpXS5zaG9wX3R5cGVdKyc/c2hvcENvZGU9JyArIGRhdGFbaV0uY29kZSArICcmc2hvcFR5cGU9JyArIGRhdGFbaV0uc2hvcF90eXBlICsgJz48ZGl2IGNsYXNzPVwiaXRlbVwiPic7XHJcblxyXG4gICAgICAgIGh0bWwgKz0gJzxpbWcgY2xhc3M9XCJwcm8tcGljXCIgc3JjPScgKyBkYXRhW2ldLmltZ0ZpbGUgKyAnPic7XHJcbiAgICAgICAgaHRtbCArPSAnPHAgY2xhc3M9XCJwcm8tbmFtZVwiPicgKyBkYXRhW2ldLm5hbWUgKyAnPC9wPic7XHJcbiAgICAgICAgaHRtbCArPSAnPC9kaXY+PC9hPic7XHJcbiAgICB9XHJcblxyXG4gICAgJCgnI3Byb2R1Y3RCb3gnKS5hcHBlbmQoaHRtbCk7XHJcbn1cclxuXHJcbi8v6aaW6aG16L2u5pKtXHJcbiQuYWpheCh7XHJcbiAgICB1cmw6IFVSTCArICcvaW5kZXgucGhwL1dlaXhpbi9MaXN0L0R5bmFtaWNGaWd1cmUnLFxyXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgIHZhciBjb2RlID0gcmVzLmNvZGUsXHJcbiAgICAgICAgICAgIGRhdGEgPSByZXMuZGF0YTtcclxuXHJcbiAgICAgICAgaWYgKGNvZGUgPT0gMjAwKSB7XHJcbiAgICAgICAgICAgIGNhcm91c2VsKGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSlcclxuXHJcbi8v6aaW6aG15ZWG5ZOBXHJcbiQuYWpheCh7XHJcbiAgICB1cmw6IFVSTCArICcvaW5kZXgucGhwL3dlaXhpbi9MaXN0L1JlY29tbWVuZExpc3QnLFxyXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgIHZhciBjb2RlID0gcmVzLmNvZGUsXHJcbiAgICAgICAgICAgIGRhdGEgPSByZXMuZGF0YTtcclxuXHJcbiAgICAgICAgaWYgKGNvZGUgPT0gMjAwKSB7XHJcbiAgICAgICAgICAgIGhvbWVQcm8oZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KVxyXG5cclxuZnVuY3Rpb24gR2V0UXVlcnlTdHJpbmcobmFtZSkge1xyXG4gICAgdmFyIHJlZyA9IG5ldyBSZWdFeHAoXCIoXnwmKVwiICsgbmFtZSArIFwiPShbXiZdKikoJnwkKVwiKTtcclxuICAgIHZhciByID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHIoMSkubWF0Y2gocmVnKTtcclxuICAgIGlmIChyICE9IG51bGwpIHJldHVybiB1bmVzY2FwZShyWzJdKTsgcmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbiQoJyNzZWFyY2hJbnAnKS5jbGljayhmdW5jdGlvbigpe1xyXG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB3aW5kb3cuY29udHJvbGxlciArIFwiL3Nfcm91dGVcIjtcclxufSlcclxuXHJcbkNPTkZJRy5qc0FwaUxpc3QgPSBbICAgIC8v6ZyA6KaB6LCD55So55qE5o6l5Y+jXHJcbiAgICAnb25NZW51U2hhcmVUaW1lbGluZScsXHJcbiAgICAnb25NZW51U2hhcmVBcHBNZXNzYWdlJ1xyXG5dXHJcbnd4LmNvbmZpZyhDT05GSUcpO1xyXG52YXIgbGluayA9IGxvY2F0aW9uLm9yaWdpbiArIGxvY2F0aW9uLnBhdGhuYW1lICsgJz9waWQ9JyArIGdldENvb2tpZSgncGlkJyk7XHJcbnd4LnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgIC8v5YiG5Lqr5pyL5Y+L5ZyIXHJcbiAgICB3eC5vbk1lbnVTaGFyZVRpbWVsaW5lKHtcclxuICAgICAgICB0aXRsZTogZG9jdW1lbnQudGl0bGUsXHJcbiAgICAgICAgbGluazogbGluayxcclxuICAgICAgICBpbWdVcmw6IHB1YmxpYyArICcvV2VpeGluL2ltYWdlL3d4YmcucG5nJ1xyXG4gICAgfSk7XHJcbiAgICAvL+WIhuS6q+aci+WPi1xyXG4gICAgd3gub25NZW51U2hhcmVBcHBNZXNzYWdlKHtcclxuICAgICAgICB0aXRsZTogZG9jdW1lbnQudGl0bGUsXHJcbiAgICAgICAgZGVzYzogJ+aIkeeahOaXhea4uOWwj+W6l++8jOmaj+aIkeW/g++8jOa4uOWkqeS4iycsXHJcbiAgICAgICAgbGluazogbGluayxcclxuICAgICAgICBpbWdVcmw6IHB1YmxpYyArICcvV2VpeGluL2ltYWdlL3d4YmcucG5nJyxcclxuICAgIH0pO1xyXG59KVxyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9ob21lL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9ob21lL2luZGV4LnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gZ2V0TGVuKHYpIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KHYueCAqIHYueCArIHYueSAqIHYueSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZG90KHYxLCB2Mikge1xyXG4gICAgICAgIHJldHVybiB2MS54ICogdjIueCArIHYxLnkgKiB2Mi55O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldEFuZ2xlKHYxLCB2Mikge1xyXG4gICAgICAgIHZhciBtciA9IGdldExlbih2MSkgKiBnZXRMZW4odjIpO1xyXG4gICAgICAgIGlmIChtciA9PT0gMCkgcmV0dXJuIDA7XHJcbiAgICAgICAgdmFyIHIgPSBkb3QodjEsIHYyKSAvIG1yO1xyXG4gICAgICAgIGlmIChyID4gMSkgciA9IDE7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguYWNvcyhyKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjcm9zcyh2MSwgdjIpIHtcclxuICAgICAgICByZXR1cm4gdjEueCAqIHYyLnkgLSB2Mi54ICogdjEueTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRSb3RhdGVBbmdsZSh2MSwgdjIpIHtcclxuICAgICAgICB2YXIgYW5nbGUgPSBnZXRBbmdsZSh2MSwgdjIpO1xyXG4gICAgICAgIGlmIChjcm9zcyh2MSwgdjIpID4gMCkge1xyXG4gICAgICAgICAgICBhbmdsZSAqPSAtMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBhbmdsZSAqIDE4MCAvIE1hdGguUEk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIEhhbmRsZXJBZG1pbiA9IGZ1bmN0aW9uKGVsKSB7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVycyA9IFtdO1xyXG4gICAgICAgIHRoaXMuZWwgPSBlbDtcclxuICAgIH07XHJcblxyXG4gICAgSGFuZGxlckFkbWluLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbihoYW5kbGVyKSB7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIEhhbmRsZXJBZG1pbi5wcm90b3R5cGUuZGVsID0gZnVuY3Rpb24oaGFuZGxlcikge1xyXG4gICAgICAgIGlmKCFoYW5kbGVyKSB0aGlzLmhhbmRsZXJzID0gW107XHJcblxyXG4gICAgICAgIGZvcih2YXIgaT10aGlzLmhhbmRsZXJzLmxlbmd0aDsgaT49MDsgaS0tKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuaGFuZGxlcnNbaV0gPT09IGhhbmRsZXIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlcnMuc3BsaWNlKGksIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEhhbmRsZXJBZG1pbi5wcm90b3R5cGUuZGlzcGF0Y2ggPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBmb3IodmFyIGk9MCxsZW49dGhpcy5oYW5kbGVycy5sZW5ndGg7IGk8bGVuOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGhhbmRsZXIgPSB0aGlzLmhhbmRsZXJzW2ldO1xyXG4gICAgICAgICAgICBpZih0eXBlb2YgaGFuZGxlciA9PT0gJ2Z1bmN0aW9uJykgaGFuZGxlci5hcHBseSh0aGlzLmVsLCBhcmd1bWVudHMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB3cmFwRnVuYyhlbCwgaGFuZGxlcikge1xyXG4gICAgICAgIHZhciBoYW5kbGVyQWRtaW4gPSBuZXcgSGFuZGxlckFkbWluKGVsKTtcclxuICAgICAgICBoYW5kbGVyQWRtaW4uYWRkKGhhbmRsZXIpO1xyXG5cclxuICAgICAgICByZXR1cm4gaGFuZGxlckFkbWluO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBBbGxveUZpbmdlciA9IGZ1bmN0aW9uIChlbCwgb3B0aW9uKSB7XHJcblxyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IHR5cGVvZiBlbCA9PSAnc3RyaW5nJyA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWwpIDogZWw7XHJcblxyXG4gICAgICAgIHRoaXMuc3RhcnQgPSB0aGlzLnN0YXJ0LmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5tb3ZlID0gdGhpcy5tb3ZlLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5lbmQgPSB0aGlzLmVuZC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuY2FuY2VsID0gdGhpcy5jYW5jZWwuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgdGhpcy5zdGFydCwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIHRoaXMubW92ZSwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwgdGhpcy5lbmQsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoY2FuY2VsXCIsIHRoaXMuY2FuY2VsLCBmYWxzZSk7XHJcblxyXG4gICAgICAgIHRoaXMucHJlViA9IHsgeDogbnVsbCwgeTogbnVsbCB9O1xyXG4gICAgICAgIHRoaXMucGluY2hTdGFydExlbiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy56b29tID0gMTtcclxuICAgICAgICB0aGlzLmlzRG91YmxlVGFwID0gZmFsc2U7XHJcblxyXG4gICAgICAgIHZhciBub29wID0gZnVuY3Rpb24gKCkgeyB9O1xyXG5cclxuICAgICAgICB0aGlzLnJvdGF0ZSA9IHdyYXBGdW5jKHRoaXMuZWxlbWVudCwgb3B0aW9uLnJvdGF0ZSB8fCBub29wKTtcclxuICAgICAgICB0aGlzLnRvdWNoU3RhcnQgPSB3cmFwRnVuYyh0aGlzLmVsZW1lbnQsIG9wdGlvbi50b3VjaFN0YXJ0IHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMubXVsdGlwb2ludFN0YXJ0ID0gd3JhcEZ1bmModGhpcy5lbGVtZW50LCBvcHRpb24ubXVsdGlwb2ludFN0YXJ0IHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMubXVsdGlwb2ludEVuZCA9IHdyYXBGdW5jKHRoaXMuZWxlbWVudCwgb3B0aW9uLm11bHRpcG9pbnRFbmQgfHwgbm9vcCk7XHJcbiAgICAgICAgdGhpcy5waW5jaCA9IHdyYXBGdW5jKHRoaXMuZWxlbWVudCwgb3B0aW9uLnBpbmNoIHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMuc3dpcGUgPSB3cmFwRnVuYyh0aGlzLmVsZW1lbnQsIG9wdGlvbi5zd2lwZSB8fCBub29wKTtcclxuICAgICAgICB0aGlzLnRhcCA9IHdyYXBGdW5jKHRoaXMuZWxlbWVudCwgb3B0aW9uLnRhcCB8fCBub29wKTtcclxuICAgICAgICB0aGlzLmRvdWJsZVRhcCA9IHdyYXBGdW5jKHRoaXMuZWxlbWVudCwgb3B0aW9uLmRvdWJsZVRhcCB8fCBub29wKTtcclxuICAgICAgICB0aGlzLmxvbmdUYXAgPSB3cmFwRnVuYyh0aGlzLmVsZW1lbnQsIG9wdGlvbi5sb25nVGFwIHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMuc2luZ2xlVGFwID0gd3JhcEZ1bmModGhpcy5lbGVtZW50LCBvcHRpb24uc2luZ2xlVGFwIHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMucHJlc3NNb3ZlID0gd3JhcEZ1bmModGhpcy5lbGVtZW50LCBvcHRpb24ucHJlc3NNb3ZlIHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMudHdvRmluZ2VyUHJlc3NNb3ZlID0gd3JhcEZ1bmModGhpcy5lbGVtZW50LCBvcHRpb24udHdvRmluZ2VyUHJlc3NNb3ZlIHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMudG91Y2hNb3ZlID0gd3JhcEZ1bmModGhpcy5lbGVtZW50LCBvcHRpb24udG91Y2hNb3ZlIHx8IG5vb3ApO1xyXG4gICAgICAgIHRoaXMudG91Y2hFbmQgPSB3cmFwRnVuYyh0aGlzLmVsZW1lbnQsIG9wdGlvbi50b3VjaEVuZCB8fCBub29wKTtcclxuICAgICAgICB0aGlzLnRvdWNoQ2FuY2VsID0gd3JhcEZ1bmModGhpcy5lbGVtZW50LCBvcHRpb24udG91Y2hDYW5jZWwgfHwgbm9vcCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NhbmNlbEFsbEhhbmRsZXIgPSB0aGlzLmNhbmNlbEFsbC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9jYW5jZWxBbGxIYW5kbGVyKTtcclxuXHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuX2NhbmNlbEFsbEhhbmRsZXIpO1xyXG5cclxuICAgICAgICB0aGlzLmRlbHRhID0gbnVsbDtcclxuICAgICAgICB0aGlzLmxhc3QgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubm93ID0gbnVsbDtcclxuICAgICAgICB0aGlzLnRhcFRpbWVvdXQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc2luZ2xlVGFwVGltZW91dCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5sb25nVGFwVGltZW91dCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zd2lwZVRpbWVvdXQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMueDEgPSB0aGlzLngyID0gdGhpcy55MSA9IHRoaXMueTIgPSBudWxsO1xyXG4gICAgICAgIHRoaXMucHJlVGFwUG9zaXRpb24gPSB7IHg6IG51bGwsIHk6IG51bGwgfTtcclxuICAgIH07XHJcblxyXG4gICAgQWxsb3lGaW5nZXIucHJvdG90eXBlID0ge1xyXG4gICAgICAgIHN0YXJ0OiBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgIGlmICghZXZ0LnRvdWNoZXMpIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5ub3cgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICB0aGlzLngxID0gZXZ0LnRvdWNoZXNbMF0ucGFnZVg7XHJcbiAgICAgICAgICAgIHRoaXMueTEgPSBldnQudG91Y2hlc1swXS5wYWdlWTtcclxuICAgICAgICAgICAgdGhpcy5kZWx0YSA9IHRoaXMubm93IC0gKHRoaXMubGFzdCB8fCB0aGlzLm5vdyk7XHJcbiAgICAgICAgICAgIHRoaXMudG91Y2hTdGFydC5kaXNwYXRjaChldnQpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wcmVUYXBQb3NpdGlvbi54ICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlzRG91YmxlVGFwID0gKHRoaXMuZGVsdGEgPiAwICYmIHRoaXMuZGVsdGEgPD0gMjUwICYmIE1hdGguYWJzKHRoaXMucHJlVGFwUG9zaXRpb24ueCAtIHRoaXMueDEpIDwgMzAgJiYgTWF0aC5hYnModGhpcy5wcmVUYXBQb3NpdGlvbi55IC0gdGhpcy55MSkgPCAzMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5wcmVUYXBQb3NpdGlvbi54ID0gdGhpcy54MTtcclxuICAgICAgICAgICAgdGhpcy5wcmVUYXBQb3NpdGlvbi55ID0gdGhpcy55MTtcclxuICAgICAgICAgICAgdGhpcy5sYXN0ID0gdGhpcy5ub3c7XHJcbiAgICAgICAgICAgIHZhciBwcmVWID0gdGhpcy5wcmVWLFxyXG4gICAgICAgICAgICAgICAgbGVuID0gZXZ0LnRvdWNoZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICBpZiAobGVuID4gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2FuY2VsTG9uZ1RhcCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2FuY2VsU2luZ2xlVGFwKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdiA9IHsgeDogZXZ0LnRvdWNoZXNbMV0ucGFnZVggLSB0aGlzLngxLCB5OiBldnQudG91Y2hlc1sxXS5wYWdlWSAtIHRoaXMueTEgfTtcclxuICAgICAgICAgICAgICAgIHByZVYueCA9IHYueDtcclxuICAgICAgICAgICAgICAgIHByZVYueSA9IHYueTtcclxuICAgICAgICAgICAgICAgIHRoaXMucGluY2hTdGFydExlbiA9IGdldExlbihwcmVWKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubXVsdGlwb2ludFN0YXJ0LmRpc3BhdGNoKGV2dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fcHJldmVudFRhcCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmxvbmdUYXBUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvbmdUYXAuZGlzcGF0Y2goZXZ0KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3ByZXZlbnRUYXAgPSB0cnVlO1xyXG4gICAgICAgICAgICB9LmJpbmQodGhpcyksIDc1MCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBtb3ZlOiBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgIGlmICghZXZ0LnRvdWNoZXMpIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIHByZVYgPSB0aGlzLnByZVYsXHJcbiAgICAgICAgICAgICAgICBsZW4gPSBldnQudG91Y2hlcy5sZW5ndGgsXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50WCA9IGV2dC50b3VjaGVzWzBdLnBhZ2VYLFxyXG4gICAgICAgICAgICAgICAgY3VycmVudFkgPSBldnQudG91Y2hlc1swXS5wYWdlWTtcclxuICAgICAgICAgICAgdGhpcy5pc0RvdWJsZVRhcCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAobGVuID4gMSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHNDdXJyZW50WCA9IGV2dC50b3VjaGVzWzFdLnBhZ2VYLFxyXG4gICAgICAgICAgICAgICAgICAgIHNDdXJyZW50WSA9IGV2dC50b3VjaGVzWzFdLnBhZ2VZXHJcbiAgICAgICAgICAgICAgICB2YXIgdiA9IHsgeDogZXZ0LnRvdWNoZXNbMV0ucGFnZVggLSBjdXJyZW50WCwgeTogZXZ0LnRvdWNoZXNbMV0ucGFnZVkgLSBjdXJyZW50WSB9O1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChwcmVWLnggIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5waW5jaFN0YXJ0TGVuID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBldnQuem9vbSA9IGdldExlbih2KSAvIHRoaXMucGluY2hTdGFydExlbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5waW5jaC5kaXNwYXRjaChldnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZXZ0LmFuZ2xlID0gZ2V0Um90YXRlQW5nbGUodiwgcHJlVik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb3RhdGUuZGlzcGF0Y2goZXZ0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHByZVYueCA9IHYueDtcclxuICAgICAgICAgICAgICAgIHByZVYueSA9IHYueTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy54MiAhPT0gbnVsbCAmJiB0aGlzLnN4MiAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGV2dC5kZWx0YVggPSAoY3VycmVudFggLSB0aGlzLngyICsgc0N1cnJlbnRYIC0gdGhpcy5zeDIpIC8gMjtcclxuICAgICAgICAgICAgICAgICAgICBldnQuZGVsdGFZID0gKGN1cnJlbnRZIC0gdGhpcy55MiArIHNDdXJyZW50WSAtIHRoaXMuc3kyKSAvIDI7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGV2dC5kZWx0YVggPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGV2dC5kZWx0YVkgPSAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy50d29GaW5nZXJQcmVzc01vdmUuZGlzcGF0Y2goZXZ0KTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLnN4MiA9IHNDdXJyZW50WDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3kyID0gc0N1cnJlbnRZO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMueDIgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBldnQuZGVsdGFYID0gY3VycmVudFggLSB0aGlzLngyO1xyXG4gICAgICAgICAgICAgICAgICAgIGV2dC5kZWx0YVkgPSBjdXJyZW50WSAtIHRoaXMueTI7XHJcblxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBldnQuZGVsdGFYID0gMDtcclxuICAgICAgICAgICAgICAgICAgICBldnQuZGVsdGFZID0gMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB0aGlzLnByZXNzTW92ZS5kaXNwYXRjaChldnQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnRvdWNoTW92ZS5kaXNwYXRjaChldnQpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fY2FuY2VsTG9uZ1RhcCgpO1xyXG4gICAgICAgICAgICB0aGlzLngyID0gY3VycmVudFg7XHJcbiAgICAgICAgICAgIHRoaXMueTIgPSBjdXJyZW50WTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChsZW4gPiAxKSB7XHJcbiAgICAgICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW5kOiBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgIGlmICghZXZ0LmNoYW5nZWRUb3VjaGVzKSByZXR1cm47XHJcbiAgICAgICAgICAgIHRoaXMuX2NhbmNlbExvbmdUYXAoKTtcclxuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgICAgICBpZiAoZXZ0LnRvdWNoZXMubGVuZ3RoIDwgMikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tdWx0aXBvaW50RW5kLmRpc3BhdGNoKGV2dCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vc3dpcGVcclxuICAgICAgICAgICAgaWYgKCh0aGlzLngyICYmIE1hdGguYWJzKHRoaXMueDEgLSB0aGlzLngyKSA+IDMwKSB8fFxyXG4gICAgICAgICAgICAgICAgKHRoaXMueTIgJiYgTWF0aC5hYnModGhpcy55MSAtIHRoaXMueTIpID4gMzApKSB7XHJcbiAgICAgICAgICAgICAgICBldnQuZGlyZWN0aW9uID0gdGhpcy5fc3dpcGVEaXJlY3Rpb24odGhpcy54MSwgdGhpcy54MiwgdGhpcy55MSwgdGhpcy55Mik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN3aXBlVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuc3dpcGUuZGlzcGF0Y2goZXZ0KTtcclxuXHJcbiAgICAgICAgICAgICAgICB9LCAwKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50YXBUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoIXNlbGYuX3ByZXZlbnRUYXApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnRhcC5kaXNwYXRjaChldnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvLyB0cmlnZ2VyIGRvdWJsZSB0YXAgaW1tZWRpYXRlbHlcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZi5pc0RvdWJsZVRhcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRvdWJsZVRhcC5kaXNwYXRjaChldnQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc2VsZi5zaW5nbGVUYXBUaW1lb3V0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5pc0RvdWJsZVRhcCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sIDApXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCFzZWxmLmlzRG91YmxlVGFwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zaW5nbGVUYXBUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2luZ2xlVGFwLmRpc3BhdGNoKGV2dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMjUwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy50b3VjaEVuZC5kaXNwYXRjaChldnQpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5wcmVWLnggPSAwO1xyXG4gICAgICAgICAgICB0aGlzLnByZVYueSA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuem9vbSA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMucGluY2hTdGFydExlbiA9IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMueDEgPSB0aGlzLngyID0gdGhpcy55MSA9IHRoaXMueTIgPSBudWxsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2FuY2VsQWxsOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3ByZXZlbnRUYXAgPSB0cnVlXHJcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnNpbmdsZVRhcFRpbWVvdXQpO1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50YXBUaW1lb3V0KTtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMubG9uZ1RhcFRpbWVvdXQpO1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5zd2lwZVRpbWVvdXQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2FuY2VsOiBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2FuY2VsQWxsKClcclxuICAgICAgICAgICAgdGhpcy50b3VjaENhbmNlbC5kaXNwYXRjaChldnQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgX2NhbmNlbExvbmdUYXA6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMubG9uZ1RhcFRpbWVvdXQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgX2NhbmNlbFNpbmdsZVRhcDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5zaW5nbGVUYXBUaW1lb3V0KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIF9zd2lwZURpcmVjdGlvbjogZnVuY3Rpb24gKHgxLCB4MiwgeTEsIHkyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBNYXRoLmFicyh4MSAtIHgyKSA+PSBNYXRoLmFicyh5MSAtIHkyKSA/ICh4MSAtIHgyID4gMCA/ICdMZWZ0JyA6ICdSaWdodCcpIDogKHkxIC0geTIgPiAwID8gJ1VwJyA6ICdEb3duJylcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBvbjogZnVuY3Rpb24oZXZ0LCBoYW5kbGVyKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXNbZXZ0XSkge1xyXG4gICAgICAgICAgICAgICAgdGhpc1tldnRdLmFkZChoYW5kbGVyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIG9mZjogZnVuY3Rpb24oZXZ0LCBoYW5kbGVyKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXNbZXZ0XSkge1xyXG4gICAgICAgICAgICAgICAgdGhpc1tldnRdLmRlbChoYW5kbGVyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBpZih0aGlzLnNpbmdsZVRhcFRpbWVvdXQpIGNsZWFyVGltZW91dCh0aGlzLnNpbmdsZVRhcFRpbWVvdXQpO1xyXG4gICAgICAgICAgICBpZih0aGlzLnRhcFRpbWVvdXQpIGNsZWFyVGltZW91dCh0aGlzLnRhcFRpbWVvdXQpO1xyXG4gICAgICAgICAgICBpZih0aGlzLmxvbmdUYXBUaW1lb3V0KSBjbGVhclRpbWVvdXQodGhpcy5sb25nVGFwVGltZW91dCk7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuc3dpcGVUaW1lb3V0KSBjbGVhclRpbWVvdXQodGhpcy5zd2lwZVRpbWVvdXQpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIHRoaXMuc3RhcnQpO1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIHRoaXMuZW5kKTtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGNhbmNlbFwiLCB0aGlzLmNhbmNlbCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnJvdGF0ZS5kZWwoKTtcclxuICAgICAgICAgICAgdGhpcy50b3VjaFN0YXJ0LmRlbCgpO1xyXG4gICAgICAgICAgICB0aGlzLm11bHRpcG9pbnRTdGFydC5kZWwoKTtcclxuICAgICAgICAgICAgdGhpcy5tdWx0aXBvaW50RW5kLmRlbCgpO1xyXG4gICAgICAgICAgICB0aGlzLnBpbmNoLmRlbCgpO1xyXG4gICAgICAgICAgICB0aGlzLnN3aXBlLmRlbCgpO1xyXG4gICAgICAgICAgICB0aGlzLnRhcC5kZWwoKTtcclxuICAgICAgICAgICAgdGhpcy5kb3VibGVUYXAuZGVsKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9uZ1RhcC5kZWwoKTtcclxuICAgICAgICAgICAgdGhpcy5zaW5nbGVUYXAuZGVsKCk7XHJcbiAgICAgICAgICAgIHRoaXMucHJlc3NNb3ZlLmRlbCgpO1xyXG4gICAgICAgICAgICB0aGlzLnR3b0ZpbmdlclByZXNzTW92ZS5kZWwoKVxyXG4gICAgICAgICAgICB0aGlzLnRvdWNoTW92ZS5kZWwoKTtcclxuICAgICAgICAgICAgdGhpcy50b3VjaEVuZC5kZWwoKTtcclxuICAgICAgICAgICAgdGhpcy50b3VjaENhbmNlbC5kZWwoKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucHJlViA9IHRoaXMucGluY2hTdGFydExlbiA9IHRoaXMuem9vbSA9IHRoaXMuaXNEb3VibGVUYXAgPSB0aGlzLmRlbHRhID0gdGhpcy5sYXN0ID0gdGhpcy5ub3cgPSB0aGlzLnRhcFRpbWVvdXQgPSB0aGlzLnNpbmdsZVRhcFRpbWVvdXQgPSB0aGlzLmxvbmdUYXBUaW1lb3V0ID0gdGhpcy5zd2lwZVRpbWVvdXQgPSB0aGlzLngxID0gdGhpcy54MiA9IHRoaXMueTEgPSB0aGlzLnkyID0gdGhpcy5wcmVUYXBQb3NpdGlvbiA9IHRoaXMucm90YXRlID0gdGhpcy50b3VjaFN0YXJ0ID0gdGhpcy5tdWx0aXBvaW50U3RhcnQgPSB0aGlzLm11bHRpcG9pbnRFbmQgPSB0aGlzLnBpbmNoID0gdGhpcy5zd2lwZSA9IHRoaXMudGFwID0gdGhpcy5kb3VibGVUYXAgPSB0aGlzLmxvbmdUYXAgPSB0aGlzLnNpbmdsZVRhcCA9IHRoaXMucHJlc3NNb3ZlID0gdGhpcy50b3VjaE1vdmUgPSB0aGlzLnRvdWNoRW5kID0gdGhpcy50b3VjaENhbmNlbCA9IHRoaXMudHdvRmluZ2VyUHJlc3NNb3ZlID0gbnVsbDtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgXHJcblxyXG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gQWxsb3lGaW5nZXI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHdpbmRvdy5BbGxveUZpbmdlciA9IEFsbG95RmluZ2VyO1xyXG4gICAgfVxyXG59KSgpO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9jb21tb24vYWxsb3lfZmluZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwidmFyIEFsZXJ0ID0gZnVuY3Rpb24oY29udGVudCkge1xyXG4gICAgdmFyICRib3ggPSAkKCc8ZGl2PjwvZGl2PicpLFxyXG4gICAgICAgICRpID0gJCgnPGkgY2xhc3M9XCJpY29uZm9udCBpY29uLWppbmdnYW9cIj48L2k+JyksXHJcbiAgICAgICAgJHNwYW4gPSAkKCc8c3Bhbj48L3NwYW4+Jyk7XHJcblxyXG4gICAgJGJveC5jc3Moe1xyXG4gICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxyXG4gICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICAgICAgd2lkdGg6ICcxODBweCcsXHJcbiAgICAgICAgYm90dG9tOiAnMzBweCcsXHJcbiAgICAgICAgbGVmdDogJ2NhbGMoNTAlIC0gOTBweCknLFxyXG4gICAgICAgIGZvbnRTaXplOiAnMTJweCcsXHJcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnM3B4JyxcclxuICAgICAgICBjb2xvcjogJyNmZmYnLFxyXG4gICAgICAgIG9wYWNpdHk6ICcwLjEnLFxyXG4gICAgICAgIGJhY2tncm91bmQ6ICdyZ2JhKDAsMCwwLDAuNyknXHJcbiAgICB9KTtcclxuXHJcbiAgICAkc3Bhbi5jc3Moe1xyXG4gICAgICAgIGxpbmVIZWlnaHQ6ICcyNXB4JyxcclxuICAgIH0pXHJcblxyXG4gICAgJHNwYW4uYXBwZW5kKGNvbnRlbnQpO1xyXG4gICAgJGJveC5hcHBlbmQoJHNwYW4pO1xyXG4gICAgJCgnYm9keScpLmFwcGVuZCgkYm94KTtcclxuICAgICRib3guYW5pbWF0ZSh7XHJcbiAgICAgICAgb3BhY2l0eTogJzEnLFxyXG4gICAgICAgIGJvdHRvbTogJzUwcHgnXHJcbiAgICB9LCAyMDAsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJGJveC5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6ICcwLjEnLFxyXG4gICAgICAgICAgICAgICAgYm90dG9tOiAnMzBweCdcclxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJGJveC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9LCAxNTAwKVxyXG4gICAgfSlcclxufVxyXG5cclxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBBbGVydDtcclxufSBlbHNlIHtcclxuICAgIHdpbmRvdy5kYXRlUHJpY2UgPSBBbGVydDtcclxufVxyXG5cclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vY29tbW9uL0FsZXJ0LW1iLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==